// <auto-generated />
using System;
using Booking;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Booking.Migrations
{
    [DbContext(typeof(BookingContext))]
    [Migration("20190508100047_ExtendedUsersAndRoles")]
    partial class ExtendedUsersAndRoles
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Booking.Clientes", b =>
                {
                    b.Property<long>("Idcliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IDCliente")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cc")
                        .IsRequired()
                        .HasColumnName("CC")
                        .HasMaxLength(15);

                    b.Property<string>("CodPostal")
                        .HasMaxLength(15);

                    b.Property<string>("Contacto")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("DataNasc")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("Email")
                        .HasMaxLength(100);

                    b.Property<string>("Imagem");

                    b.Property<string>("Localidade")
                        .IsRequired()
                        .HasMaxLength(70);

                    b.Property<string>("Morada")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.HasKey("Idcliente");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Booking.EspecificacoesQuarto", b =>
                {
                    b.Property<short>("Idespecificacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IDEspecificacao")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<long>("IdtipoQuarto")
                        .HasColumnName("IDTipoQuarto");

                    b.HasKey("Idespecificacao");

                    b.HasIndex("IdtipoQuarto");

                    b.ToTable("EspecificacoesQuarto");
                });

            modelBuilder.Entity("Booking.Hoteis", b =>
                {
                    b.Property<long>("Idhotel")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IDHotel")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodPostal")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("Descricao")
                        .HasColumnType("ntext");

                    b.Property<string>("Imagem");

                    b.Property<string>("Localidade")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("Morada")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("NomeHotel")
                        .IsRequired()
                        .HasMaxLength(80);

                    b.Property<string>("NumEstrelas")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<short>("QuantidadeQuartos");

                    b.HasKey("Idhotel");

                    b.ToTable("Hoteis");
                });

            modelBuilder.Entity("Booking.Pagamento", b =>
                {
                    b.Property<long>("CodPagamento")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cvv")
                        .HasColumnName("CVV")
                        .HasMaxLength(5);

                    b.Property<string>("DataValidadeCartao")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("Descricao")
                        .HasColumnType("ntext");

                    b.Property<short>("IdtipoPagamento")
                        .HasColumnName("IDTipoPagamento");

                    b.Property<string>("NomeTitular")
                        .IsRequired()
                        .HasMaxLength(120);

                    b.Property<string>("NumCartao")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("CodPagamento");

                    b.HasIndex("IdtipoPagamento");

                    b.ToTable("Pagamento");
                });

            modelBuilder.Entity("Booking.Precario", b =>
                {
                    b.Property<byte>("Idregime")
                        .HasColumnName("IDRegime");

                    b.Property<long>("IdtipoQuarto")
                        .HasColumnName("IDTipoQuarto");

                    b.Property<DateTime>("Data")
                        .HasColumnType("date");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(6, 2)");

                    b.HasKey("Idregime", "IdtipoQuarto");

                    b.HasIndex("IdtipoQuarto");

                    b.ToTable("Precario");
                });

            modelBuilder.Entity("Booking.Regimes", b =>
                {
                    b.Property<byte>("Idregime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IDRegime")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Idhotel")
                        .HasColumnName("IDHotel");

                    b.Property<string>("TipoRegime")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.HasKey("Idregime");

                    b.HasIndex("Idhotel");

                    b.ToTable("Regimes");
                });

            modelBuilder.Entity("Booking.Reservas", b =>
                {
                    b.Property<long>("Idreserva")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IDReserva")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CheckIn")
                        .HasColumnType("date");

                    b.Property<DateTime?>("CheckOut")
                        .HasColumnType("date");

                    b.Property<long>("CodPagamento");

                    b.Property<long>("Idcliente")
                        .HasColumnName("IDCliente");

                    b.Property<long>("Idhotel")
                        .HasColumnName("IDHotel");

                    b.Property<byte>("Idregime")
                        .HasColumnName("IDRegime");

                    b.Property<long>("IdtipoQuarto")
                        .HasColumnName("IDTipoQuarto");

                    b.Property<short>("QuantAdultos");

                    b.Property<short>("QuantCriancas");

                    b.HasKey("Idreserva");

                    b.HasIndex("CodPagamento");

                    b.HasIndex("Idcliente");

                    b.HasIndex("Idhotel");

                    b.HasIndex("Idregime");

                    b.HasIndex("IdtipoQuarto");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("Booking.ServicosHotel", b =>
                {
                    b.Property<short>("Idservicos")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IDServicos")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<long>("Idhotel")
                        .HasColumnName("IDHotel");

                    b.HasKey("Idservicos");

                    b.HasIndex("Idhotel");

                    b.ToTable("ServicosHotel");
                });

            modelBuilder.Entity("Booking.TipoPagamento", b =>
                {
                    b.Property<short>("IdtipoPagamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IDTipoPagamento")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Designacao")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("IdtipoPagamento");

                    b.ToTable("TipoPagamento");
                });

            modelBuilder.Entity("Booking.TipoQuarto", b =>
                {
                    b.Property<long>("IdtipoQuarto")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IDTipoQuarto")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("Capacidade");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<long>("Idhotel")
                        .HasColumnName("IDHotel");

                    b.Property<string>("Imagem");

                    b.Property<int>("Inventario");

                    b.HasKey("IdtipoQuarto");

                    b.HasIndex("Idhotel");

                    b.ToTable("TipoQuarto");
                });

            modelBuilder.Entity("Booking.Utilizadores", b =>
                {
                    b.Property<string>("Utilizador")
                        .HasMaxLength(150);

                    b.Property<string>("Pass")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("TipoUtilizador")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("Utilizador");

                    b.ToTable("Utilizadores");
                });

            modelBuilder.Entity("Booking.EspecificacoesQuarto", b =>
                {
                    b.HasOne("Booking.TipoQuarto", "IdtipoQuartoNavigation")
                        .WithMany("EspecificacoesQuarto")
                        .HasForeignKey("IdtipoQuarto")
                        .HasConstraintName("FK_EspecificacoesQuarto_TipoQuarto");
                });

            modelBuilder.Entity("Booking.Pagamento", b =>
                {
                    b.HasOne("Booking.TipoPagamento", "IdtipoPagamentoNavigation")
                        .WithMany("Pagamento")
                        .HasForeignKey("IdtipoPagamento")
                        .HasConstraintName("FK_Pagamento_TipoPagamento");
                });

            modelBuilder.Entity("Booking.Precario", b =>
                {
                    b.HasOne("Booking.Regimes", "IdregimeNavigation")
                        .WithMany("Precario")
                        .HasForeignKey("Idregime")
                        .HasConstraintName("FK_Precario_Regimes");

                    b.HasOne("Booking.TipoQuarto", "IdtipoQuartoNavigation")
                        .WithMany("Precario")
                        .HasForeignKey("IdtipoQuarto")
                        .HasConstraintName("FK_Precario_TipoQuarto");
                });

            modelBuilder.Entity("Booking.Regimes", b =>
                {
                    b.HasOne("Booking.Hoteis", "IdhotelNavigation")
                        .WithMany("Regimes")
                        .HasForeignKey("Idhotel")
                        .HasConstraintName("FK_Regimes_Hoteis");
                });

            modelBuilder.Entity("Booking.Reservas", b =>
                {
                    b.HasOne("Booking.Pagamento", "CodPagamentoNavigation")
                        .WithMany("Reservas")
                        .HasForeignKey("CodPagamento")
                        .HasConstraintName("FK_Reservas_Pagamento");

                    b.HasOne("Booking.Clientes", "IdclienteNavigation")
                        .WithMany("Reservas")
                        .HasForeignKey("Idcliente")
                        .HasConstraintName("FK_Reservas_Clientes");

                    b.HasOne("Booking.Hoteis", "IdhotelNavigation")
                        .WithMany("Reservas")
                        .HasForeignKey("Idhotel")
                        .HasConstraintName("FK_Reservas_Hoteis");

                    b.HasOne("Booking.Regimes", "IdregimeNavigation")
                        .WithMany("Reservas")
                        .HasForeignKey("Idregime")
                        .HasConstraintName("FK_Reservas_Regimes");

                    b.HasOne("Booking.TipoQuarto", "IdtipoQuartoNavigation")
                        .WithMany("Reservas")
                        .HasForeignKey("IdtipoQuarto")
                        .HasConstraintName("FK_Reservas_TipoQuarto");
                });

            modelBuilder.Entity("Booking.ServicosHotel", b =>
                {
                    b.HasOne("Booking.Hoteis", "IdhotelNavigation")
                        .WithMany("ServicosHotel")
                        .HasForeignKey("Idhotel")
                        .HasConstraintName("FK_ServicosHotel_Hoteis");
                });

            modelBuilder.Entity("Booking.TipoQuarto", b =>
                {
                    b.HasOne("Booking.Hoteis", "IdhotelNavigation")
                        .WithMany("TipoQuarto")
                        .HasForeignKey("Idhotel")
                        .HasConstraintName("FK_TipoQuarto_Hoteis");
                });
#pragma warning restore 612, 618
        }
    }
}
